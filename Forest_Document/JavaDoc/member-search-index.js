memberSearchIndex = [{"p":"forest.model","c":"NodeModel","l":"addChild(NodeModel)","u":"addChild(forest.model.NodeModel)"},{"p":"forest.model","c":"NodeModel","l":"addChildren(List<NodeModel>)","u":"addChildren(java.util.List)"},{"p":"forest.model","c":"NodeModel","l":"addParent(NodeModel)","u":"addParent(forest.model.NodeModel)"},{"p":"forest.model","c":"NodeModel","l":"addParents(List<NodeModel>)","u":"addParents(java.util.List)"},{"p":"forest.model","c":"ForestModel","l":"animate()"},{"p":"forest.model","c":"ForestModel","l":"arrange(NodeModel)","u":"arrange(forest.model.NodeModel)"},{"p":"forest.view","c":"ForestView","l":"aWindow"},{"p":"forest","c":"Constant","l":"BACKGROUND_COLOR"},{"p":"forest","c":"Constant","l":"BRANCH_COLOR"},{"p":"forest.data","c":"BranchData","l":"BranchData(NodeData, NodeData)","u":"%3Cinit%3E(forest.data.NodeData,forest.data.NodeData)"},{"p":"forest.tests","c":"BranchDataTest","l":"BranchDataTest()","u":"%3Cinit%3E()"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"branches"},{"p":"forest.model","c":"ForestModel","l":"branches"},{"p":"forest.data","c":"ForestData","l":"branchList"},{"p":"forest.model","c":"BranchModel","l":"BranchModel(NodeModel, NodeModel)","u":"%3Cinit%3E(forest.model.NodeModel,forest.model.NodeModel)"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"Branchの文字列形式がフォーマット通りではなかった場合の例外をキャッチできるかテスト()","u":"Branch%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E5%BD%A2%E5%BC%8F%E3%81%8C%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E9%80%9A%E3%82%8A%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E3%83%86%E3%82%B9%E3%83%88()"},{"p":"forest.model","c":"ForestModel","l":"changed()"},{"p":"forest.model","c":"NodeModel","l":"children"},{"p":"forest","c":"Constant","l":"Constant()","u":"%3Cinit%3E()"},{"p":"forest.repository","c":"ForestDataRepository","l":"convertBranchData(List<String>, List<NodeData>)","u":"convertBranchData(java.util.List,java.util.List)"},{"p":"forest.repository","c":"ForestDataRepository","l":"convertForestData(File)","u":"convertForestData(java.io.File)"},{"p":"forest.repository","c":"ForestDataRepository","l":"convertNodeData(List<String>)","u":"convertNodeData(java.util.List)"},{"p":"forest.model","c":"BranchModel","l":"draw(Graphics)","u":"draw(java.awt.Graphics)"},{"p":"forest.model","c":"ForestModel","l":"draw(Graphics)","u":"draw(java.awt.Graphics)"},{"p":"forest.model","c":"NodeModel","l":"draw(Graphics)","u":"draw(java.awt.Graphics)"},{"p":"forest.model","c":"BranchModel","l":"endNode"},{"p":"forest.data","c":"BranchData","l":"endNodeData"},{"p":"forest","c":"Example","l":"Example()","u":"%3Cinit%3E()"},{"p":"forest.model","c":"NodeModel","l":"extent"},{"p":"forest","c":"Constant","l":"FONT"},{"p":"forest.view","c":"MockForestView","l":"forestController"},{"p":"forest.controller","c":"ForestController","l":"ForestController()","u":"%3Cinit%3E()"},{"p":"forest.data","c":"ForestData","l":"ForestData(List<NodeData>, List<BranchData>)","u":"%3Cinit%3E(java.util.List,java.util.List)"},{"p":"forest.repository","c":"ForestDataRepository","l":"ForestDataRepository()","u":"%3Cinit%3E()"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"ForestDataRepositoryTest()","u":"%3Cinit%3E()"},{"p":"forest.tests","c":"ForestDataTest","l":"ForestDataTest()","u":"%3Cinit%3E()"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"ForestDataType()","u":"%3Cinit%3E()"},{"p":"forest.view","c":"MockForestView","l":"forestModel"},{"p":"forest.model","c":"ForestModel","l":"ForestModel()","u":"%3Cinit%3E()"},{"p":"forest.view","c":"ForestView","l":"ForestView(ForestModel)","u":"%3Cinit%3E(forest.model.ForestModel)"},{"p":"forest.view","c":"ForestView","l":"ForestView(ForestModel, ForestController)","u":"%3Cinit%3E(forest.model.ForestModel,forest.controller.ForestController)"},{"p":"forest.model","c":"ForestModel","l":"getBounds()"},{"p":"forest.model","c":"NodeModel","l":"getBounds()"},{"p":"forest.data","c":"ForestData","l":"getBranchList()"},{"p":"forest.model","c":"NodeModel","l":"getChildren()"},{"p":"forest.data","c":"BranchData","l":"getEnd()"},{"p":"forest.model","c":"BranchModel","l":"getEnd()"},{"p":"forest.model","c":"NodeModel","l":"getExtent()"},{"p":"forest.repository","c":"ForestDataRepository","l":"getForestData(File)","u":"getForestData(java.io.File)"},{"p":"forest.repository","c":"IForestDataRepository","l":"getForestData(File)","u":"getForestData(java.io.File)"},{"p":"forest.data","c":"NodeData","l":"getId()"},{"p":"forest.model","c":"NodeModel","l":"getLocation()"},{"p":"forest.data","c":"NodeData","l":"getName()"},{"p":"forest.model","c":"NodeModel","l":"getName()"},{"p":"forest.model","c":"ForestModel","l":"getNodeFromPoint(Point)","u":"getNodeFromPoint(java.awt.Point)"},{"p":"forest.data","c":"ForestData","l":"getNodeList()"},{"p":"forest.data","c":"BranchData","l":"getStart()"},{"p":"forest.model","c":"BranchModel","l":"getStart()"},{"p":"forest.model","c":"NodeModel","l":"getStringHeight()"},{"p":"forest.model","c":"NodeModel","l":"getStringWidth(String)","u":"getStringWidth(java.lang.String)"},{"p":"forest.view","c":"ForestView","l":"getWindow()"},{"p":"forest.view","c":"IForestView","l":"getWindow()"},{"p":"forest.view","c":"MockForestView","l":"getWindow()"},{"p":"forest","c":"Constant","l":"HORIZONTAL_MOVE"},{"p":"forest.data","c":"NodeData","l":"id"},{"p":"forest.model","c":"ForestModel","l":"initialize(ForestData)","u":"initialize(forest.data.ForestData)"},{"p":"forest.model","c":"NodeModel","l":"isLeaf()"},{"p":"forest.model","c":"NodeModel","l":"isRoot()"},{"p":"forest.model","c":"NodeModel","l":"isVisited"},{"p":"forest.model","c":"NodeModel","l":"isVisited()"},{"p":"forest.model","c":"NodeModel","l":"isVisited(Boolean)","u":"isVisited(java.lang.Boolean)"},{"p":"forest.model","c":"ForestModel","l":"listNodes()"},{"p":"forest.model","c":"NodeModel","l":"location"},{"p":"forest","c":"Example","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"forest","c":"Constant","l":"MARGIN"},{"p":"forest","c":"Constant","l":"MAX_NODE_COUNT"},{"p":"forest","c":"Constant","l":"MAX_NODE_NAME_COUNT"},{"p":"forest.view","c":"MockForestView","l":"MockForestView(ForestModel)","u":"%3Cinit%3E(forest.model.ForestModel)"},{"p":"forest.view","c":"MockForestView","l":"MockForestView(ForestModel, ForestController)","u":"%3Cinit%3E(forest.model.ForestModel,forest.controller.ForestController)"},{"p":"forest.controller","c":"ForestController","l":"model"},{"p":"forest.view","c":"ForestView","l":"model"},{"p":"forest.controller","c":"ForestController","l":"mouseClicked(MouseEvent)","u":"mouseClicked(java.awt.event.MouseEvent)"},{"p":"forest.controller","c":"ForestController","l":"mouseDragged(MouseEvent)","u":"mouseDragged(java.awt.event.MouseEvent)"},{"p":"forest.data","c":"NodeData","l":"name"},{"p":"forest.model","c":"NodeModel","l":"name"},{"p":"forest","c":"Constant","l":"NODE_COLOR"},{"p":"forest.data","c":"NodeData","l":"NodeData(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"forest.tests","c":"NodeDataTest","l":"NodeDataTest()","u":"%3Cinit%3E()"},{"p":"forest.data","c":"ForestData","l":"nodeList"},{"p":"forest.model","c":"NodeModel","l":"NodeModel(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"nodes"},{"p":"forest.model","c":"ForestModel","l":"nodes"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"Nodeの個数が10000以上の例外をキャッチできるかテスト()","u":"Node%E3%81%AE%E5%80%8B%E6%95%B0%E3%81%8C10000%E4%BB%A5%E4%B8%8A%E3%81%AE%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E3%83%86%E3%82%B9%E3%83%88()"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"Nodeの文字列形式がフォーマット通りではなかった場合の例外をキャッチできるかテスト()","u":"Node%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E5%BD%A2%E5%BC%8F%E3%81%8C%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E9%80%9A%E3%82%8A%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E3%83%86%E3%82%B9%E3%83%88()"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"Nodeの名前が100文字以上の例外をキャッチできるかテスト()","u":"Node%E3%81%AE%E5%90%8D%E5%89%8D%E3%81%8C100%E6%96%87%E5%AD%97%E4%BB%A5%E4%B8%8A%E3%81%AE%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E3%83%86%E3%82%B9%E3%83%88()"},{"p":"forest.view","c":"ForestView","l":"paintComponent(Graphics)","u":"paintComponent(java.awt.Graphics)"},{"p":"forest.view","c":"MockForestView","l":"paintComponent(Graphics)","u":"paintComponent(java.awt.Graphics)"},{"p":"forest.model","c":"NodeModel","l":"parents"},{"p":"forest.model","c":"ForestModel","l":"roots"},{"p":"forest","c":"Example","l":"run(String, ForestData)","u":"run(java.lang.String,forest.data.ForestData)"},{"p":"forest.tests","c":"SampleTest","l":"SampleTest()","u":"%3Cinit%3E()"},{"p":"forest.view","c":"IForestView","l":"scrollAmount()"},{"p":"forest.view","c":"IForestView","l":"scrollBy(Point)","u":"scrollBy(java.awt.Point)"},{"p":"forest.view","c":"IForestView","l":"scrollTo(Point)","u":"scrollTo(java.awt.Point)"},{"p":"forest.model","c":"NodeModel","l":"setExtent(Point)","u":"setExtent(java.awt.Point)"},{"p":"forest.model","c":"NodeModel","l":"setLocation(Point)","u":"setLocation(java.awt.Point)"},{"p":"forest.controller","c":"ForestController","l":"setModel(ForestModel)","u":"setModel(forest.model.ForestModel)"},{"p":"forest.model","c":"NodeModel","l":"setName(String)","u":"setName(java.lang.String)"},{"p":"forest.controller","c":"ForestController","l":"setView(IForestView)","u":"setView(forest.view.IForestView)"},{"p":"forest.view","c":"ForestView","l":"showDialog(NodeModel)","u":"showDialog(forest.model.NodeModel)"},{"p":"forest.view","c":"IForestView","l":"showDialog(NodeModel)","u":"showDialog(forest.model.NodeModel)"},{"p":"forest.view","c":"MockForestView","l":"showDialog(NodeModel)","u":"showDialog(forest.model.NodeModel)"},{"p":"forest","c":"Example","l":"showErrorMessage(String)","u":"showErrorMessage(java.lang.String)"},{"p":"forest.view","c":"ForestView","l":"showNodeFromPoint(Point)","u":"showNodeFromPoint(java.awt.Point)"},{"p":"forest.view","c":"IForestView","l":"showNodeFromPoint(Point)","u":"showNodeFromPoint(java.awt.Point)"},{"p":"forest.view","c":"MockForestView","l":"showNodeFromPoint(Point)","u":"showNodeFromPoint(java.awt.Point)"},{"p":"forest","c":"Constant","l":"SLEEP_TIME"},{"p":"forest.model","c":"BranchModel","l":"startNode"},{"p":"forest.data","c":"BranchData","l":"startNodeData"},{"p":"forest.tests","c":"SampleTest","l":"testSuccess()"},{"p":"forest.data","c":"BranchData","l":"toString()"},{"p":"forest.data","c":"NodeData","l":"toString()"},{"p":"forest.model","c":"BranchModel","l":"toString()"},{"p":"forest.model","c":"ForestModel","l":"toString()"},{"p":"forest.model","c":"NodeModel","l":"toString()"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"trees"},{"p":"forest.view","c":"IForestView","l":"update()"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"forest.repository","c":"ForestDataRepository.ForestDataType","l":"values()"},{"p":"forest","c":"Constant","l":"VERTICAL_MOVE"},{"p":"forest.controller","c":"ForestController","l":"view"},{"p":"forest.model","c":"ForestModel","l":"waitAndBroadcast()"},{"p":"forest","c":"Constant","l":"WINDOW_HEIGHT"},{"p":"forest","c":"Constant","l":"WINDOW_HEIGHT_MINIMUM"},{"p":"forest","c":"Constant","l":"WINDOW_WIDTH"},{"p":"forest","c":"Constant","l":"WINDOW_WIDTH_MINIMUM"},{"p":"forest.tests","c":"ForestDataTest","l":"コンストラクタで設定したbranchListと値がすべて一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9FbranchList%E3%81%A8%E5%80%A4%E3%81%8C%E3%81%99%E3%81%B9%E3%81%A6%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"BranchDataTest","l":"コンストラクタで設定したendNodeDataと値が一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9FendNodeData%E3%81%A8%E5%80%A4%E3%81%8C%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"NodeDataTest","l":"コンストラクタで設定したidが値と一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9Fid%E3%81%8C%E5%80%A4%E3%81%A8%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"NodeDataTest","l":"コンストラクタで設定したnameが値と一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9Fname%E3%81%8C%E5%80%A4%E3%81%A8%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"ForestDataTest","l":"コンストラクタで設定したnodeListと値がすべて一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9FnodeList%E3%81%A8%E5%80%A4%E3%81%8C%E3%81%99%E3%81%B9%E3%81%A6%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"BranchDataTest","l":"コンストラクタで設定したstartNodeDataと値が一致する()","u":"%E3%82%B3%E3%83%B3%E3%82%B9%E3%83%88%E3%83%A9%E3%82%AF%E3%82%BF%E3%81%A7%E8%A8%AD%E5%AE%9A%E3%81%97%E3%81%9FstartNodeData%E3%81%A8%E5%80%A4%E3%81%8C%E4%B8%80%E8%87%B4%E3%81%99%E3%82%8B()"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"正しくForestDataを変換できるかTest()","u":"%E6%AD%A3%E3%81%97%E3%81%8FForestData%E3%82%92%E5%A4%89%E6%8F%9B%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8BTest()"},{"p":"forest.tests","c":"ForestDataRepositoryTest","l":"属性ラベルの文字列形式がフォーマット通りではなかった場合の例外をキャッチできるかテスト()","u":"%E5%B1%9E%E6%80%A7%E3%83%A9%E3%83%99%E3%83%AB%E3%81%AE%E6%96%87%E5%AD%97%E5%88%97%E5%BD%A2%E5%BC%8F%E3%81%8C%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%E9%80%9A%E3%82%8A%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8B%E3%81%A3%E3%81%9F%E5%A0%B4%E5%90%88%E3%81%AE%E4%BE%8B%E5%A4%96%E3%82%92%E3%82%AD%E3%83%A3%E3%83%83%E3%83%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%8B%E3%83%86%E3%82%B9%E3%83%88()"}];updateSearchResults();